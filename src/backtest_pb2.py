# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: src/backtest.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='src/backtest.proto',
  package='backtest',
  syntax='proto3',
  serialized_options=b'Z\021backtest;backtest',
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x12src/backtest.proto\x12\x08\x62\x61\x63ktest\"\xb6\x02\n\x07Request\x12-\n\x06weight\x18\x01 \x03(\x0b\x32\x1d.backtest.Request.WeightEntry\x12\r\n\x05start\x18\x02 \x01(\t\x12\x0b\n\x03\x65nd\x18\x03 \x01(\t\x12\x0f\n\x07indexes\x18\x04 \x03(\t\x12$\n\x04\x62\x61se\x18\x05 \x03(\x0b\x32\x16.backtest.Request.Base\x12(\n\x06method\x18\x06 \x01(\x0e\x32\x18.backtest.Request.Method\x1a-\n\x0bWeightEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x02:\x02\x38\x01\x1a$\n\x04\x42\x61se\x12\r\n\x05index\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x02\"*\n\x06Method\x12\t\n\x05month\x10\x00\x12\x0b\n\x07quarter\x10\x01\x12\x08\n\x04year\x10\x02\"x\n\x08Response\x12\x1a\n\x03nav\x18\x01 \x03(\x0b\x32\r.backtest.Nav\x12*\n\x0bperformance\x18\x02 \x01(\x0b\x32\x15.backtest.Performance\x12$\n\x08industry\x18\x03 \x03(\x0b\x32\x12.backtest.Industry\" \n\x03Nav\x12\x0c\n\x04\x64\x61te\x18\x01 \x01(\t\x12\x0b\n\x03nav\x18\x02 \x01(\x02\"\xa2\x02\n\x0bPerformance\x12\x39\n\nindicators\x18\x01 \x03(\x0b\x32%.backtest.Performance.IndicatorsEntry\x1aS\n\x0fIndicatorsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12/\n\x05value\x18\x02 \x01(\x0b\x32 .backtest.Performance.Indicators:\x02\x38\x01\x1a\x82\x01\n\nIndicators\x12\x42\n\tindicator\x18\x01 \x03(\x0b\x32/.backtest.Performance.Indicators.IndicatorEntry\x1a\x30\n\x0eIndicatorEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x02:\x02\x38\x01\"H\n\x08Industry\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x11\n\tportfolio\x18\x02 \x01(\x02\x12\r\n\x05index\x18\x03 \x01(\x02\x12\x0c\n\x04\x64iff\x18\x04 \x01(\x02\x42\x13Z\x11\x62\x61\x63ktest;backtestb\x06proto3'
)



_REQUEST_METHOD = _descriptor.EnumDescriptor(
  name='Method',
  full_name='backtest.Request.Method',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='month', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='quarter', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='year', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=301,
  serialized_end=343,
)
_sym_db.RegisterEnumDescriptor(_REQUEST_METHOD)


_REQUEST_WEIGHTENTRY = _descriptor.Descriptor(
  name='WeightEntry',
  full_name='backtest.Request.WeightEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='backtest.Request.WeightEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='value', full_name='backtest.Request.WeightEntry.value', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'8\001',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=216,
  serialized_end=261,
)

_REQUEST_BASE = _descriptor.Descriptor(
  name='Base',
  full_name='backtest.Request.Base',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='index', full_name='backtest.Request.Base.index', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='value', full_name='backtest.Request.Base.value', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=263,
  serialized_end=299,
)

_REQUEST = _descriptor.Descriptor(
  name='Request',
  full_name='backtest.Request',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='weight', full_name='backtest.Request.weight', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='start', full_name='backtest.Request.start', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='end', full_name='backtest.Request.end', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='indexes', full_name='backtest.Request.indexes', index=3,
      number=4, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='base', full_name='backtest.Request.base', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='method', full_name='backtest.Request.method', index=5,
      number=6, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_REQUEST_WEIGHTENTRY, _REQUEST_BASE, ],
  enum_types=[
    _REQUEST_METHOD,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=33,
  serialized_end=343,
)


_RESPONSE = _descriptor.Descriptor(
  name='Response',
  full_name='backtest.Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='nav', full_name='backtest.Response.nav', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='performance', full_name='backtest.Response.performance', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='industry', full_name='backtest.Response.industry', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=345,
  serialized_end=465,
)


_NAV = _descriptor.Descriptor(
  name='Nav',
  full_name='backtest.Nav',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='date', full_name='backtest.Nav.date', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='nav', full_name='backtest.Nav.nav', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=467,
  serialized_end=499,
)


_PERFORMANCE_INDICATORSENTRY = _descriptor.Descriptor(
  name='IndicatorsEntry',
  full_name='backtest.Performance.IndicatorsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='backtest.Performance.IndicatorsEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='value', full_name='backtest.Performance.IndicatorsEntry.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'8\001',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=576,
  serialized_end=659,
)

_PERFORMANCE_INDICATORS_INDICATORENTRY = _descriptor.Descriptor(
  name='IndicatorEntry',
  full_name='backtest.Performance.Indicators.IndicatorEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='backtest.Performance.Indicators.IndicatorEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='value', full_name='backtest.Performance.Indicators.IndicatorEntry.value', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'8\001',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=744,
  serialized_end=792,
)

_PERFORMANCE_INDICATORS = _descriptor.Descriptor(
  name='Indicators',
  full_name='backtest.Performance.Indicators',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='indicator', full_name='backtest.Performance.Indicators.indicator', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_PERFORMANCE_INDICATORS_INDICATORENTRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=662,
  serialized_end=792,
)

_PERFORMANCE = _descriptor.Descriptor(
  name='Performance',
  full_name='backtest.Performance',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='indicators', full_name='backtest.Performance.indicators', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_PERFORMANCE_INDICATORSENTRY, _PERFORMANCE_INDICATORS, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=502,
  serialized_end=792,
)


_INDUSTRY = _descriptor.Descriptor(
  name='Industry',
  full_name='backtest.Industry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='backtest.Industry.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='portfolio', full_name='backtest.Industry.portfolio', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='index', full_name='backtest.Industry.index', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='diff', full_name='backtest.Industry.diff', index=3,
      number=4, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=794,
  serialized_end=866,
)

_REQUEST_WEIGHTENTRY.containing_type = _REQUEST
_REQUEST_BASE.containing_type = _REQUEST
_REQUEST.fields_by_name['weight'].message_type = _REQUEST_WEIGHTENTRY
_REQUEST.fields_by_name['base'].message_type = _REQUEST_BASE
_REQUEST.fields_by_name['method'].enum_type = _REQUEST_METHOD
_REQUEST_METHOD.containing_type = _REQUEST
_RESPONSE.fields_by_name['nav'].message_type = _NAV
_RESPONSE.fields_by_name['performance'].message_type = _PERFORMANCE
_RESPONSE.fields_by_name['industry'].message_type = _INDUSTRY
_PERFORMANCE_INDICATORSENTRY.fields_by_name['value'].message_type = _PERFORMANCE_INDICATORS
_PERFORMANCE_INDICATORSENTRY.containing_type = _PERFORMANCE
_PERFORMANCE_INDICATORS_INDICATORENTRY.containing_type = _PERFORMANCE_INDICATORS
_PERFORMANCE_INDICATORS.fields_by_name['indicator'].message_type = _PERFORMANCE_INDICATORS_INDICATORENTRY
_PERFORMANCE_INDICATORS.containing_type = _PERFORMANCE
_PERFORMANCE.fields_by_name['indicators'].message_type = _PERFORMANCE_INDICATORSENTRY
DESCRIPTOR.message_types_by_name['Request'] = _REQUEST
DESCRIPTOR.message_types_by_name['Response'] = _RESPONSE
DESCRIPTOR.message_types_by_name['Nav'] = _NAV
DESCRIPTOR.message_types_by_name['Performance'] = _PERFORMANCE
DESCRIPTOR.message_types_by_name['Industry'] = _INDUSTRY
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Request = _reflection.GeneratedProtocolMessageType('Request', (_message.Message,), {

  'WeightEntry' : _reflection.GeneratedProtocolMessageType('WeightEntry', (_message.Message,), {
    'DESCRIPTOR' : _REQUEST_WEIGHTENTRY,
    '__module__' : 'src.backtest_pb2'
    # @@protoc_insertion_point(class_scope:backtest.Request.WeightEntry)
    })
  ,

  'Base' : _reflection.GeneratedProtocolMessageType('Base', (_message.Message,), {
    'DESCRIPTOR' : _REQUEST_BASE,
    '__module__' : 'src.backtest_pb2'
    # @@protoc_insertion_point(class_scope:backtest.Request.Base)
    })
  ,
  'DESCRIPTOR' : _REQUEST,
  '__module__' : 'src.backtest_pb2'
  # @@protoc_insertion_point(class_scope:backtest.Request)
  })
_sym_db.RegisterMessage(Request)
_sym_db.RegisterMessage(Request.WeightEntry)
_sym_db.RegisterMessage(Request.Base)

Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), {
  'DESCRIPTOR' : _RESPONSE,
  '__module__' : 'src.backtest_pb2'
  # @@protoc_insertion_point(class_scope:backtest.Response)
  })
_sym_db.RegisterMessage(Response)

Nav = _reflection.GeneratedProtocolMessageType('Nav', (_message.Message,), {
  'DESCRIPTOR' : _NAV,
  '__module__' : 'src.backtest_pb2'
  # @@protoc_insertion_point(class_scope:backtest.Nav)
  })
_sym_db.RegisterMessage(Nav)

Performance = _reflection.GeneratedProtocolMessageType('Performance', (_message.Message,), {

  'IndicatorsEntry' : _reflection.GeneratedProtocolMessageType('IndicatorsEntry', (_message.Message,), {
    'DESCRIPTOR' : _PERFORMANCE_INDICATORSENTRY,
    '__module__' : 'src.backtest_pb2'
    # @@protoc_insertion_point(class_scope:backtest.Performance.IndicatorsEntry)
    })
  ,

  'Indicators' : _reflection.GeneratedProtocolMessageType('Indicators', (_message.Message,), {

    'IndicatorEntry' : _reflection.GeneratedProtocolMessageType('IndicatorEntry', (_message.Message,), {
      'DESCRIPTOR' : _PERFORMANCE_INDICATORS_INDICATORENTRY,
      '__module__' : 'src.backtest_pb2'
      # @@protoc_insertion_point(class_scope:backtest.Performance.Indicators.IndicatorEntry)
      })
    ,
    'DESCRIPTOR' : _PERFORMANCE_INDICATORS,
    '__module__' : 'src.backtest_pb2'
    # @@protoc_insertion_point(class_scope:backtest.Performance.Indicators)
    })
  ,
  'DESCRIPTOR' : _PERFORMANCE,
  '__module__' : 'src.backtest_pb2'
  # @@protoc_insertion_point(class_scope:backtest.Performance)
  })
_sym_db.RegisterMessage(Performance)
_sym_db.RegisterMessage(Performance.IndicatorsEntry)
_sym_db.RegisterMessage(Performance.Indicators)
_sym_db.RegisterMessage(Performance.Indicators.IndicatorEntry)

Industry = _reflection.GeneratedProtocolMessageType('Industry', (_message.Message,), {
  'DESCRIPTOR' : _INDUSTRY,
  '__module__' : 'src.backtest_pb2'
  # @@protoc_insertion_point(class_scope:backtest.Industry)
  })
_sym_db.RegisterMessage(Industry)


DESCRIPTOR._options = None
_REQUEST_WEIGHTENTRY._options = None
_PERFORMANCE_INDICATORSENTRY._options = None
_PERFORMANCE_INDICATORS_INDICATORENTRY._options = None
# @@protoc_insertion_point(module_scope)
